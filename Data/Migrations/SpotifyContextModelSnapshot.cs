// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spotify.Data;

#nullable disable

namespace Spotify.Data.Migrations
{
    [DbContext(typeof(SpotifyContext))]
    partial class SpotifyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("Spotify.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Homayoun Shajarian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mohammadreza Shajarian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mohammad Motamedi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Keyvan Kalhor"
                        });
                });

            modelBuilder.Entity("Spotify.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Link = "abr-biseda-mibarad.mp4",
                            Title = "Abr Biseda Mibarad"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            Link = "tasnif-ghollab.mp4",
                            Title = "Tasnif Ghollab"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 2,
                            Link = "rahe-meykhane.mp4",
                            Title = "Rahe Meykhane"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 2,
                            Link = "saghi.mp4",
                            Title = "Saghi"
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 3,
                            Link = "hala-ke-miravi.mp4",
                            Title = "Hala Ke Miravi"
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 3,
                            Link = "dastam-ra-begir.mp4",
                            Title = "Dastam Ra Begir"
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 4,
                            Link = "khatoon.mp4",
                            Title = "Khatoon"
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 4,
                            Link = "gol-va-khak.mp4",
                            Title = "Gol Va Khak"
                        });
                });

            modelBuilder.Entity("Spotify.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "hoseinshaemi@gmail.com",
                            IsAdmin = true,
                            IsVerified = true,
                            Password = "$2b$10$RP0U1QHbMHM5MuQwMWIlcukscw3hI7uW9n2WsPSIDl6R6n.VcdEdC",
                            Username = "hshaemi",
                            VerificationToken = "b5c47c6fd898421da866084b06877b67"
                        },
                        new
                        {
                            Id = 2,
                            Email = "amirhosseinfathi@gmail.com",
                            IsAdmin = false,
                            IsVerified = true,
                            Password = "$2b$10$aizHepe82n7C2nn844.pjO366zgBrpHMB.FejTfAwB6wXz/K/k/LO",
                            Username = "afathi",
                            VerificationToken = "cc9245b3860c4337b2ca38469ce98d79"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alinikaein@gmail.com",
                            IsAdmin = false,
                            IsVerified = true,
                            Password = "$2b$10$dnlioaOYLoh9r5Z58Qm9NefC0IMru/HDpO6r8OFw.RKxuqdSIgM1K",
                            Username = "anikaein",
                            VerificationToken = "5de09702354844de9fd2fe22423ddcb9"
                        },
                        new
                        {
                            Id = 4,
                            Email = "mammadmmp@gmail.com",
                            IsAdmin = false,
                            IsVerified = true,
                            Password = "$2b$10$qa.z5C92ABVmepPszzatiOzQ2cRrwPzzRU9fg20k5Q59u/uAV8.NS",
                            Username = "mamadmmp",
                            VerificationToken = "e9c0b0d1a3f7441f9d075378f4b3fad3"
                        });
                });

            modelBuilder.Entity("Spotify.Models.UserMusic", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "MusicId");

                    b.HasIndex("MusicId");

                    b.ToTable("UserMusics");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            MusicId = 2
                        },
                        new
                        {
                            UserId = 1,
                            MusicId = 3
                        },
                        new
                        {
                            UserId = 2,
                            MusicId = 3
                        },
                        new
                        {
                            UserId = 3,
                            MusicId = 4
                        },
                        new
                        {
                            UserId = 3,
                            MusicId = 5
                        },
                        new
                        {
                            UserId = 4,
                            MusicId = 1
                        },
                        new
                        {
                            UserId = 4,
                            MusicId = 6
                        });
                });

            modelBuilder.Entity("Spotify.Models.Music", b =>
                {
                    b.HasOne("Spotify.Models.Artist", "Artist")
                        .WithMany("Musics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Spotify.Models.UserMusic", b =>
                {
                    b.HasOne("Spotify.Models.Music", "Music")
                        .WithMany("UserMusics")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spotify.Models.User", "User")
                        .WithMany("UserMusics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Music");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Spotify.Models.Artist", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("Spotify.Models.Music", b =>
                {
                    b.Navigation("UserMusics");
                });

            modelBuilder.Entity("Spotify.Models.User", b =>
                {
                    b.Navigation("UserMusics");
                });
#pragma warning restore 612, 618
        }
    }
}
